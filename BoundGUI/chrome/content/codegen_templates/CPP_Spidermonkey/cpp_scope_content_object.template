{
"description":"",
	
"templateCode":
"
namespace {$namespaceName}
{
{if $childScopesContent}{$childScopesContent|indent:1:'\\t'}
	
{/if}{if $functionsWrapperCode}{$functionsWrapperCode|indent:1:'\\t'}
	
{/if}{if $functionsDefineCode}	JSFunctionSpec functionsDefs[] = {
{$functionsDefineCode|indent:3:'\\t'}
			JS_FS_END
		};
	
{/if}
	JSBool init(JSContext* cx, JSObject* scope)
	{ 
	{if $newObjectName}	JSObject* newObj = JS_DefineObject(cx, scope, \"{$newObjectName}\", NULL, NULL, 0);
		if(!newObj)
			return false;
			
{/if}{if $functionsDefineCode}		if(!JS_DefineFunctions(cx, {$defScope}, functionsDefs))
			return false;
			
{/if}{if $initCalls}{$initCalls|indent:2:'\\t'}
{/if}
		return true;
	}
}",

"customFunctionsSource": {

	"namespaceName":	
		["data", "
			data.namespaceName = data.nameChain[data.nameChain.length-1];
		"],
		
	"childScopesContent":	
		["data", "
			var childScopesContent = '';
			for(var i = 0; i < data.childScopes.length; ++i)
				if(data.childScopes[i].isInline)
					childScopesContent += data.childScopes[i].cpp_scope_definition + '\\n\\n'
			data.childScopesContent = childScopesContent;
		"],
		
	"functionCode":	
		["data", "
			var functionsWrapperCode = ''; var functionsDefineCode = '';
			for(var i = 0; i < data.childFunctions.length; ++i)
			{
				var func = data.childFunctions[i];
				functionsWrapperCode += func.wrapper_function_code + '\\n\\n';
				functionsDefineCode += 'JS_FS(\"' + func.funcName + '\", ' + func.wrapper_function_name + ', ' + func.numParams + ', 0),\\n';
			}
			data.functionsWrapperCode = functionsWrapperCode;
			data.functionsDefineCode = functionsDefineCode;
		"],

	"fullNamespace":	
		["data", "
			var fullNamespace = '::jswrap';
			for(var i = 0; i < data.nameChain.length; ++i)
				fullNamespace += '::' + data.nameChain[i];
			
			data.fullNamespace = fullNamespace;
		"],
	
	"defScope":	
		["data", "
			data.defScope = (data.newObjectName == null) ? 'scope' : 'newObj';
		"],
	
	"initCalls":	
		["data", "
			if(data.childScopes.length == 0)
				return;
				
			var initCalls = '';
			for(var i = 0; i < data.childScopes.length; ++i)
				initCalls += data.fullNamespace + '::' + data.childScopes[i].scopeName + '::init(cx, ' + data.defScope + ');\\n';
			
			data.initCalls = initCalls;
		"]
}

}